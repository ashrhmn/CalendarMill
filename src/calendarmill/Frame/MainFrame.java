/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calendarmill.Frame;

import calendarmill.Entity.Customer;
import calendarmill.Repository.CustomerRepo;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ashrh
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    CustomerRepo cr;
    ArrayList<Customer> customersByName;
    ArrayList<Customer> customersByPhone;

    public MainFrame() {
        initComponents();
        customerTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        customersByName = new ArrayList<>();
        customersByPhone = new ArrayList<>();
        cr = new CustomerRepo();
        updateTableData();
    }

    public Object[] customerTableRowData(Customer customer) {
        Object rowData[] = {customer.getName(), customer.getAddress(), customer.getPhone()};
        return rowData;
    }

    public void updateTableData() {
        customersByName.clear();
        customersByName = cr.getCustomerFilteredByName("");
        System.out.println(customersByName.size());
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        model.setRowCount(0);

        for (int i = 0; i < customersByName.size(); ++i) {
            model.addRow(customerTableRowData(customersByName.get(i)));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        clearBtn = new javax.swing.JButton();
        todayBtn = new javax.swing.JButton();
        nameField = new javax.swing.JTextField();
        editCustomerBtn = new javax.swing.JButton();
        newCustomerBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        phoneField = new javax.swing.JTextField();
        delCustomerBtn = new javax.swing.JButton();
        filterBtn = new javax.swing.JButton();
        viewSelectedBtn = new javax.swing.JButton();
        newForSelectedBtn = new javax.swing.JButton();
        todayBtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 204));
        setForeground(new java.awt.Color(51, 51, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        clearBtn.setBackground(new java.awt.Color(59, 89, 182));
        clearBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("Clear/Refresh");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        todayBtn.setBackground(new java.awt.Color(59, 89, 182));
        todayBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        todayBtn.setForeground(new java.awt.Color(255, 255, 255));
        todayBtn.setText("Today");

        nameField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        editCustomerBtn.setBackground(new java.awt.Color(59, 89, 182));
        editCustomerBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        editCustomerBtn.setForeground(new java.awt.Color(255, 255, 255));
        editCustomerBtn.setText("Edit Customer");
        editCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCustomerBtnActionPerformed(evt);
            }
        });

        newCustomerBtn.setBackground(new java.awt.Color(59, 89, 182));
        newCustomerBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        newCustomerBtn.setForeground(new java.awt.Color(255, 255, 255));
        newCustomerBtn.setText("New Customer");
        newCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCustomerBtnActionPerformed(evt);
            }
        });

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "Phone No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(customerTable);

        phoneField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        delCustomerBtn.setBackground(new java.awt.Color(59, 89, 182));
        delCustomerBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        delCustomerBtn.setForeground(new java.awt.Color(255, 255, 255));
        delCustomerBtn.setText("Delete Customer");
        delCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delCustomerBtnActionPerformed(evt);
            }
        });

        filterBtn.setBackground(new java.awt.Color(59, 89, 182));
        filterBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        filterBtn.setForeground(new java.awt.Color(255, 255, 255));
        filterBtn.setText("Filter");
        filterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterBtnActionPerformed(evt);
            }
        });

        viewSelectedBtn.setBackground(new java.awt.Color(59, 89, 182));
        viewSelectedBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        viewSelectedBtn.setForeground(new java.awt.Color(255, 255, 255));
        viewSelectedBtn.setText("View");
        viewSelectedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSelectedBtnActionPerformed(evt);
            }
        });

        newForSelectedBtn.setBackground(new java.awt.Color(59, 89, 182));
        newForSelectedBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        newForSelectedBtn.setForeground(new java.awt.Color(255, 255, 255));
        newForSelectedBtn.setText("New");
        newForSelectedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newForSelectedBtnActionPerformed(evt);
            }
        });

        todayBtn1.setBackground(new java.awt.Color(59, 89, 182));
        todayBtn1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        todayBtn1.setForeground(new java.awt.Color(255, 255, 255));
        todayBtn1.setText("Manage Items");
        todayBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(todayBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newForSelectedBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewSelectedBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(todayBtn1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(newCustomerBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editCustomerBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delCustomerBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(719, 719, 719)
                        .addComponent(clearBtn)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(viewSelectedBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newForSelectedBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(todayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(todayBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterBtnActionPerformed
        // TODO add your handling code here:
        String name = nameField.getText();
        String phone = phoneField.getText();

        customersByName.clear();
        customersByPhone.clear();

        customersByName = cr.getCustomerFilteredByName(name);
        customersByPhone = cr.getCustomerFilteredByPhone(phone);

        System.out.println(customersByName.size());
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        model.setRowCount(0);

        if (!name.equals("")) {

            for (int i = 0; i < customersByName.size(); ++i) {
                model.addRow(customerTableRowData(customersByName.get(i)));
            }
        }
        if (!phone.equals("")) {
            for (int i = 0; i < customersByPhone.size(); ++i) {
                model.addRow(customerTableRowData(customersByPhone.get(i)));
            }
        }


    }//GEN-LAST:event_filterBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        updateTableData();
        nameField.setText("");
        phoneField.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void newCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCustomerBtnActionPerformed
        // TODO add your handling code here:
        CustomerEditFrame frame = new CustomerEditFrame("new");
        frame.setVisible(true);
    }//GEN-LAST:event_newCustomerBtnActionPerformed

    private void editCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCustomerBtnActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        int row = customerTable.getSelectedRow();
        if (row != -1) {
            String phone = model.getValueAt(row, 2).toString();
            String name = model.getValueAt(row, 0).toString();
            String address = model.getValueAt(row, 1).toString();
            System.out.println(phone);
            CustomerEditFrame frame = new CustomerEditFrame("edit");
            frame.setVisible(true);
            frame.setPhoneField(phone);
            frame.setNameField(name);
            frame.setAddressField(address);
        } else {
            JOptionPane.showMessageDialog(this, "Select a customer first");
        }

    }//GEN-LAST:event_editCustomerBtnActionPerformed

    private void delCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delCustomerBtnActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        int row = customerTable.getSelectedRow();
        if (row != -1) {
            String phone = model.getValueAt(row, 2).toString();
            String name = model.getValueAt(row, 0).toString();
            String address = model.getValueAt(row, 1).toString();
            System.out.println(phone);
            int op = JOptionPane.showConfirmDialog(this, "Are you sure want to delete Customer " + name + "?");
            if (op == 0) {
                cr.deleteCustomer(phone);
            } else {

            }
        } else {
            JOptionPane.showMessageDialog(this, "Select a customer first");
        }
    }//GEN-LAST:event_delCustomerBtnActionPerformed

    private void todayBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todayBtn1ActionPerformed
        // TODO add your handling code here:
        ManageItemsFrame frame = new ManageItemsFrame();
        frame.setVisible(true);
    }//GEN-LAST:event_todayBtn1ActionPerformed

    private void viewSelectedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSelectedBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        int row = customerTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select a customer first");
        } else {
            String phone = model.getValueAt(row, 2).toString();
            ViewSelectedCustomerFrame frame = new ViewSelectedCustomerFrame(phone);
            frame.setVisible(true);
        }
    }//GEN-LAST:event_viewSelectedBtnActionPerformed

    private void newForSelectedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newForSelectedBtnActionPerformed
        // TODO add your handling code here:
                DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        int row = customerTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select a customer first");
        } else {
            String phone = model.getValueAt(row, 2).toString();
            DataEntryFrame frame = new DataEntryFrame(phone);
            frame.setVisible(true);
        }
    }//GEN-LAST:event_newForSelectedBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtn;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton delCustomerBtn;
    private javax.swing.JButton editCustomerBtn;
    private javax.swing.JButton filterBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton newCustomerBtn;
    private javax.swing.JButton newForSelectedBtn;
    private javax.swing.JTextField phoneField;
    private javax.swing.JButton todayBtn;
    private javax.swing.JButton todayBtn1;
    private javax.swing.JButton viewSelectedBtn;
    // End of variables declaration//GEN-END:variables

}
